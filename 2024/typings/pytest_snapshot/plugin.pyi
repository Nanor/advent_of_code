"""
This type stub file was generated by pyright.
"""

import pytest
from pathlib import Path
from typing import Any, Generator, List, Self, Union

PARAMETRIZED_TEST_REGEX = ...

def pytest_addoption(parser: Any) -> None: ...
@pytest.fixture
def snapshot(request: Any) -> Generator[Snapshot, Any, None]: ...

class Snapshot:
    _snapshot_update: bool = ...
    _allow_snapshot_deletion: bool = ...
    _created_snapshots: List[Path] = ...
    _updated_snapshots: List[Path] = ...
    _snapshots_to_delete: List[Path] = ...
    _snapshot_dir: Path = ...
    def __init__(
        self, snapshot_update: bool, allow_snapshot_deletion: bool, snapshot_dir: Path
    ) -> None: ...
    def __enter__(self) -> Self: ...
    def __exit__(self, exc_type: Any, exc_val: Any, exc_tb: Any) -> None: ...
    @property
    def snapshot_dir(self) -> Path: ...
    @snapshot_dir.setter
    def snapshot_dir(self, value: Any) -> None: ...
    def assert_match(
        self, value: Union[str, bytes], snapshot_name: Union[str, Path]
    ) -> None:
        """
        Asserts that ``value`` equals the current value of the snapshot with the given ``snapshot_name``.

        If pytest was run with the --snapshot-update flag, the snapshot will instead be updated to ``value``.
        The test will fail if there were any changes to the snapshot.
        """
        ...

    def assert_match_dir(
        self, dir_dict: dict[Any, Any], snapshot_dir_name: Union[str, Path]
    ) -> None:
        """
        Asserts that the values in dir_dict equal the current values in the given snapshot directory.

        If pytest was run with the --snapshot-update flag, the snapshots will be updated.
        The test will fail if there were any changes to the snapshots.
        """
        ...
